name: Zebra CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black
      - name: Run linting
        run: |
          ruff check .
          black --check .

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        requirements-file: ['requirements.txt', 'requirements-integration.txt', 'requirements-governance.txt']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ matrix.requirements-file }}
          pip install pytest pytest-mock
      - name: Run tests
        run: PYTHONPATH=. pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker images
        run: |
          docker build -t zebra-orchestrator -f src/zebra_orchestrator/Dockerfile .
          docker build -t sample-service -f src/sample_service/Dockerfile .